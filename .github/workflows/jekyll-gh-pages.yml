name: Deploy CTC web pages with GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.discord-push.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.DEPLOY_KEY }}
      - name: Parse result files
        uses: actions/setup-python@v5
        with:
            python-version: '3.10'
            cache: 'pip'
      - run: pip install -r requirements.txt
      - run: python parse_results.py
      - name: Push standings to Discord
        id: discord-push
        env:
          WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          SITE_URL: ${{ vars.SITE_URL }}
          MESSAGE_0_ID: ${{ vars.MESSAGE_0_ID }}
          MESSAGE_1_ID: ${{ vars.MESSAGE_1_ID }}
        run: python discord_push.py
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  update-vars:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.build.outputs.matrix)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: .
          ssh-key: ${{ secrets.DEPLOY_KEY }}
      - name: Update Repo Message Vars
        env:
          GH_TOKEN: ${{ secrets.REPO_VAR_PAT }}
        run: |
          gh variable list
          gh variable set MESSAGE_${{ matrix.num }}_ID --body ${{ matrix.id }}
          gh variable list

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
